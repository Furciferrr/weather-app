{"version":3,"sources":["components/weekDayWeather/weekDayWeather.module.css","components/TimeWeatherItem/timeWeather.module.css","img/snowFlake.svg","components/TimeWeatherItem/TimeWeatherItem.jsx","components/weekDayWeather/WeekDayWeather.jsx","components/footerData/FooterData.jsx","components/weather.jsx","components/WeatherContainer.jsx","App.js","reportWebVitals.js","index.js","components/weather.module.css","components/footerData/footerData.module.css"],"names":["module","exports","TimeWeatherItem","className","classes","timeWeatherItem","this","props","time","src","snowFlake","alt","degree","React","Component","WeekDayWeather","weekDayWeatherItem","day","weekDay","weatherImage","degreeDay","degreeNight","FooterData","footerDiscription","lefttWrapp","headingLeft","valueLeft","rigghtWrapp","headingRight","valueRight","Weather","listDaysDegree","state","list","filter","dt_txt","includes","getWeekDay","dt","hour","pop","weekday","unshift","city","name","weather","description","Math","round","main","temp","timeWrapper","it","index","map","item","clear","weekDayWrapper","el","Date","sunrise","toLocaleString","minute","sunset","humidity","wind","speed","feels_like","pressure","visibility","WeatherContainer","getWeather","setState","fetching","axios","get","then","response","data","console","log","resultsObj","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.496c58e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekDayWeatherItem\":\"weekDayWeather_weekDayWeatherItem__UbAhx\",\"day\":\"weekDayWeather_day__3_zDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeWeatherItem\":\"timeWeather_timeWeatherItem__pLos5\"};","export default __webpack_public_path__ + \"static/media/snowFlake.69474fd1.svg\";","import React from 'react'\r\nimport snowFlake from './../../img/snowFlake.svg'\r\nimport classes from './timeWeather.module.css'\r\n\r\nclass TimeWeatherItem extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n           <div className={classes.timeWeatherItem}>\r\n               <div>{this.props.time}</div>\r\n               <img src={snowFlake} alt='icon'></img>\r\n               <div>{this.props.degree}&#176;</div>\r\n           </div>\r\n                 \r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TimeWeatherItem","import React from 'react'\r\nimport classes from './weekDayWeather.module.css'\r\n\r\nclass WeekDayWeather extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n           <div className={classes.weekDayWeatherItem}>\r\n            <div className={classes.day}>{this.props.weekDay}</div>\r\n            <div><img src={this.props.weatherImage} alt='weatherImage'/></div>\r\n            <div>{this.props.degreeDay}</div>\r\n            <div>{this.props.degreeNight}</div>\r\n           </div>\r\n                 \r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default WeekDayWeather","import React from 'react'\r\nimport classes from './footerData.module.css'\r\n\r\nclass FooterData extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n           <div className={classes.footerDiscription}>\r\n            <div className={classes.lefttWrapp}>\r\n                <div>{this.props.headingLeft}</div>\r\n                <div>{this.props.valueLeft}</div>\r\n            </div>\r\n            <div className={classes.rigghtWrapp}>\r\n                <div>{this.props.headingRight}</div>\r\n                <div>{this.props.valueRight}</div>\r\n            </div>\r\n           </div>\r\n                 \r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default FooterData","import React from 'react'\r\nimport TimeWeatherItem from './TimeWeatherItem/TimeWeatherItem'\r\nimport classes from './weather.module.css'\r\nimport WeekDayWeather from './weekDayWeather/WeekDayWeather'\r\nimport snowFlake from './../img/snowFlake.svg'\r\nimport FooterData from './footerData/FooterData'\r\n\r\nclass Weather extends React.Component {\r\n    \r\n    render() {\r\n    const listDaysDegree = this.props.state.list.filter(list => list.dt_txt.includes('15:00:00'))\r\n    if (this.props.getWeekDay(this.props.state.list[0].dt,{ hour: 'numeric' }) < 12) {\r\n        listDaysDegree.pop()\r\n    } else if (this.props.getWeekDay(this.props.state.list[0].dt, { weekday: 'long' }) !== this.props.getWeekDay(listDaysDegree[0].dt, { weekday: 'long' })) {\r\n        listDaysDegree.unshift(this.props.state.list[0])\r\n        listDaysDegree.pop()\r\n    }\r\n     \r\n        return (\r\n            <div>\r\n                    <div>\r\n                        <div>\r\n                            <h3>{this.props.state.city.name}</h3>\r\n                            <div>{this.props.state.list[0].weather[0].description}</div>\r\n                            <h1>{Math.round(this.props.state.list[0].main.temp)}</h1>\r\n                        </div>\r\n\r\n                        <div className={classes.timeWrapper}>\r\n                            {this.props.state.list.filter((it, index) => index < 10).map((item, index) => {\r\n                                return <TimeWeatherItem key={index} time={index === 0 ? 'Now' : this.props.getWeekDay(item.dt, { hour: 'numeric' })}\r\n                                    degree={Math.round(item.main.temp)} />\r\n                            })}\r\n                            <div className={classes.clear}></div>\r\n                        </div>\r\n                        <div  className={classes.weekDayWrapper}>\r\n                        { listDaysDegree.map((item, index) => {\r\n                                return <WeekDayWeather key={index} weekDay={this.props.getWeekDay(item.dt, { weekday: 'long' })}\r\n                                weatherImage={snowFlake}\r\n                                degreeDay={Math.round(item.main.temp)}\r\n                                degreeNight={Math.round(this.props.state.list.filter(el=> this.props.getWeekDay(el.dt, { weekday: 'long' }) === \r\n                                this.props.getWeekDay(item.dt + 86400, { weekday: 'long' }) &&  el.dt_txt.includes(\"03:00:00\"))[0].main.temp)}/>\r\n                        })} \r\n                        </div>\r\n                        <div>\r\n                            <FooterData\r\n                                 headingLeft=\"SUNRISE\"\r\n                                 valueLeft={new Date (this.props.state.city.sunrise * 1000).toLocaleString('ru', { hour: 'numeric', minute: \"numeric\" })}\r\n                                 headingRight=\"SUNSET\"\r\n                                 valueRight={new Date (this.props.state.city.sunset * 1000).toLocaleString('ru', { hour: 'numeric', minute: \"numeric\" })} />\r\n                            <FooterData\r\n                                 headingLeft=\"SUNRISE\"\r\n                                 valueLeft={new Date (this.props.state.city.sunrise * 1000).toLocaleString('ru', { hour: 'numeric', minute: \"numeric\" })}\r\n                                 headingRight=\"HUMIDITY\"\r\n                                 valueRight={`${this.props.state.list[0].main.humidity} %`} />     \r\n                             <FooterData\r\n                                 headingLeft=\"WIND\"\r\n                                 valueLeft={`${this.props.state.list[0].wind.speed} km/hr`}\r\n                                 headingRight=\"FEELS LIKE\"\r\n                                 valueRight={this.props.state.list[0].main.feels_like} \r\n                                 />       \r\n                            <FooterData\r\n                                 headingLeft=\"PRECIPITION\"\r\n                                 valueLeft={this.props.state.list[0].wind.speed}\r\n                                 headingRight=\"PRESSURE\"\r\n                                 valueRight={`${this.props.state.list[0].main.pressure} hPa`} \r\n                                 />      \r\n                            <FooterData\r\n                                 headingLeft=\"VISIBILITY\"\r\n                                 valueLeft={`${this.props.state.list[0].visibility / 100} km`}\r\n                                 headingRight=\"UV INDEX\"\r\n                                 valueRight={this.props.state.list[0].main.feels_like} \r\n                                 />     \r\n                        </div>\r\n                        \r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Weather","import React from 'react'\r\nimport axios from 'axios'\r\nimport Weather from './weather'\r\n\r\nclass WeatherContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            list: [{ dt: (new Date() / 1000) }],\r\n            fetching: true\r\n        }\r\n\r\n    }\r\n\r\n    getWeather = () => {\r\n        this.setState({ fetching: true })\r\n        axios.get(`http://api.openweathermap.org/data/2.5/forecast?id=${625144}&appid=ac35f82e34c8ef86117fc6e8551c2fc0&lang=${'ru'}&units=${'metric'}`)\r\n            .then(response => {\r\n                this.setState(response.data, () => {\r\n                    this.setState({ fetching: false })\r\n\r\n                })\r\n                console.log(this.state)\r\n            })        \r\n    }\r\n\r\n    getWeekDay = (time, resultsObj) => {\r\n        return (\r\n            new Date(time * 1000 - 10800000).toLocaleString('ru', resultsObj)\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.getWeather()\r\n    }\r\n    render() {\r\n    \r\n        return (\r\n            <div>\r\n                {this.state.fetching ? 'waiting...' :\r\n                   <Weather state={this.state}\r\n                            getWeekDay={this.getWeekDay}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default WeatherContainer","import './App.css';\n\nimport WeatherContainer from './components/WeatherContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherContainer name='Vadim'/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeWrapper\":\"weather_timeWrapper__Bz6Ds\",\"clear\":\"weather_clear__2Ub_y\",\"weekDayWrapper\":\"weather_weekDayWrapper__OZmz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerDiscription\":\"footerData_footerDiscription__21_Py\"};"],"sourceRoot":""}